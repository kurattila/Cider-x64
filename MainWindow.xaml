<Window x:Class="Cider_x64.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Cider_x64"
        xmlns:acb="clr-namespace:Cider_x64.Helpers.AttachedCommandBehavior"
        xmlns:helpers="clr-namespace:Cider_x64.Helpers"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainViewModel}"
        Title="Cider x64" Height="350" Width="525" d:DesignWidth="300">
    <Window.Resources>
        <CollectionViewSource x:Key="mruAssemblies" Source="{Binding FileMenuItems}" />
        <BooleanToVisibilityConverter x:Key="visibilityConverter" />
        <CollectionViewSource x:Key="guiTypesGroupedViewSource"
                              Source="{Binding Path=ListOfSelectedAssemblyTypes}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Namespace" />
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Namespace" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top" AutomationProperties.AutomationId="mainMenu">
            <MenuItem Header="_File" AutomationProperties.AutomationId="fileMenuItem">
                <MenuItem.ItemsSource>
                    <CompositeCollection>
                        <MenuItem x:Name="miOpenFile" AutomationProperties.AutomationId="fileOpenMenuItem"
                                Header="_Open" 
                                Command="{Binding ChangeAssemblyCommand}"
                                />
                        <CollectionContainer Collection="{Binding Source={StaticResource mruAssemblies}}" />
                    </CompositeCollection>
                </MenuItem.ItemsSource>
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="MenuItem.Header" Value="{Binding Title}"/>
                        <Setter Property="MenuItem.Command" Value="{Binding Path=DataContext.MruFileCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                        <Setter Property="MenuItem.CommandParameter" Value="{Binding .}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSeparator}" Value="True">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Separator />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="Al_ways on Top" IsCheckable="True" IsChecked="{Binding IsTopMostMainWindow}" />
            </MenuItem>
        </Menu>
        <DockPanel LastChildFill="True" Margin="8">

            <Button DockPanel.Dock="Bottom"
                    Margin="0,8,0,0"
                    Visibility="{Binding IsManualRestartButtonShown, Converter={StaticResource visibilityConverter}}"
                    Click="requestAppRestart" 
                    ToolTip="Manual reload needed"
                    Width="Auto">Reload now (several changes detected at once)</Button>

            <TextBlock DockPanel.Dock="Top" 
                        Margin="0,2,0,0"  
                        Text="{Binding SelectedAssembly}"
                        ToolTip="Currently loaded assembly" />

            <Grid DockPanel.Dock="Top" Margin="0,8,0,0">
                <ListBox x:Name="lbDllItemsList" 
                            ItemsSource="{Binding Source={StaticResource guiTypesGroupedViewSource}}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="local:GuiTypeViewModel">
                            <DockPanel LastChildFill="True" >
                                <local:PlayStopButton x:Name="showButton" DockPanel.Dock="Left"
                                                        Command="{Binding ShowCommand}"
                                                        CommandParameter="{Binding NamespaceDotType}"
                                                        IsChecked="{Binding IsShown, Mode=OneWay}"
                                                        acb:CommandBehavior.Event="MouseEnter"
                                                        acb:CommandBehavior.Command="{Binding UpdateCurrentShowButtonCoordsCommand}"
                                                        acb:CommandBehavior.CommandParameter="{Binding Path=., ElementName=showButton}">
                                    Show
                                </local:PlayStopButton>
                                <TextBlock x:Name="guiTypeName" Text="{Binding Class}" Margin="6,0,0,0" />
                            </DockPanel>
                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="False" />
                                        <Condition Binding="{Binding IsShown}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter TargetName="showButton" Property="Visibility" Value="Hidden"/>
                                </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding IsShown}" Value="True">
                                    <Setter TargetName="guiTypeName" Property="Foreground" Value="Black"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Foreground" Value="Gray" />
                                </Style>
                            </GroupStyle.ContainerStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate DataType="local:GuiTypeViewModel">
                                    <TextBlock FontWeight="Bold" FontSize="16"
                                               Text="{Binding Name}" /> <!-- Name is a property of CollectionViewGroup -->
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListBox.GroupStyle>
                </ListBox>
                <TextBlock Text="{Binding TextualInfoForAssemblyTypes, FallbackValue=No WPF GUI types}" FontSize="18" Foreground="LightGray"
                           HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" >
                </TextBlock>
            </Grid>

        </DockPanel>
        
    </DockPanel>
</Window>
